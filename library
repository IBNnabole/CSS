font-size - размер шрифта
font-weight: bold/normal; - Ширина шрифта, 2 значения
text-align: right; - Для text-alignсвойства можно задать одно из следующих часто используемых значений:
                        left - выравнивает текст по левой стороне его родительского элемента, которым в данном случае является браузер.
                        center - центрирует текст внутри своего родительского элемента.
                        right - выравнивает текст по правой стороне его родительского элемента.
                        justify- разделяет текст, чтобы выровнять его с правой и левой стороной родительского элемента.

color: red; - цвет текста
background-color: blue; - цвет его фона
opacity: 0.5; - прозрачность элемента. Измеряется от 0 до 1 как (0-100%)
background-image: url('images/mountains.jpg'); - картинка как фон элемента

p {
  color: blue !important; - при конструкции с !important этот элемент становится главнее всех, его ничем не перекрыть!!!
}

height: 80px; - высота
width: 240px; - ширина
border: 3px solid coral; - граница и ее параметры(это со всех сторон), параметры в порядке(width, style и color)
border-radius: 5px; - установит для всех четырех углов границы радиус 5 пикселей (то есть такую же кривизну, что и круг с радиусом 5 пикселей).
div.container {
  height: 60px;
  width: 60px;                   - создает идеальный круг
  border: 3px solid blue;
  border-radius: 50%;
}

padding: 10px; - растояние между элементом и границей. сущ-ют - padding-top, padding-right, padding-bottom, padding-left. (padding: 6px 11px 4px 9px;) - такое тоже можно.
margin: 20px; - поле за приделами границы, такие же условия как и у padding
margin: 0 auto; - центровка, но она возможна если задана ширина(width: 400px;)
min-width: 300px; - это свойство обеспечивает минимальную ширину рамки элемента.
max-width: 900px; - это свойство обеспечивает максимальную ширину рамки элемента.
min-height: 150px; - это свойство обеспечивает минимальную высоту рамки элемента.
max-height: 400px; - это свойство обеспечивает максимальную высоту рамки элемента.

overflow: scroll; - что будет с элементами, которые не поместились. есть 3 вар заполнения: hidden, scroll, visible.
////////////////////////////////////////////////////////////////////
Код для сброса настроек по умолчанию:

* {
  margin: 0;
  padding: 0;
}
////////////////////////////////////////////////////////////////////

visibility: hidden; - Этот элемент может скрывать от просмотра. У него есть значения: hidden, visible, collapse.
display: none; - будет полностью удален с веб-страницы
///////////////////////////////////////////////////////////////////
again to delete usual sett...
* {
  box-sizing: border-box;
}
//////////////////////////////////////////////////

letter-spacing: 2px;
display: inline-block; - display property: inline, block, and inline-block.

//////////////////////////////////////////////////////////////////////////
position: ...; - values: static, relative, absolute, fixed, sticky

.green-box {
  background-color: green;
  position: relative;
  top: 50px;
  left: 120px;
}
////////////////////////////////////////////////////////////////////////////

z-index: 10; -  We changed position to relative, because the z-index property does not work on static elements. z-index property controls how far back or how far forward an element should appear on the web page when elements overlap.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
If you’re simply interested in moving an element as far left or as far right as possible in the container, you can use the float property.

.orange-section {
  background-color: orange;
  width: 50%;
  float: right; <--
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
The clear property specifies how elements should behave when they bump into each other on the page. 

div.special {
  clear: left; - values: left, right, none, both
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
color: rgba(234, 45, 98, 0.33); - it might be a hsla. Its argument which help us to create visibe or not object.

color: transparent; - Это эквивалентно rgba(0, 0, 0, 0)
